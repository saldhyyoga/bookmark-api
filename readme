# Request for Comments (RFC): BookmarkApp

## 1. Overview
BookmarkApp is a web application that allows users to manage their bookmarks by categorizing them. The application provides authentication and authorization features, allowing users to register, log in, and manage their stored bookmarks. The system is built using Node.js, Prisma ORM, and Docker for containerization.

## 2. Architecture
### Folder Structure:
```
bookmarkapp/
  prisma/              # Prisma schema and migrations
  src/
    auth/             # Authentication module
    categories/       # Category management
    bookmarks/        # Bookmark management
Dockerfile            # Docker container configuration
docker-compose.yml    # Docker Compose configuration
```

### Technologies Used:
- **Backend:** Node.js, TypeScript
- **ORM:** Prisma
- **Database:** PostgreSQL
- **Containerization:** Docker & Docker Compose
- **Logging:** Pino

## 3. Authentication API
### Base URL: `http://localhost:3001/auth`
| Method | Endpoint           | Description           |
|--------|--------------------|-----------------------|
| POST   | `/register`        | Register a new user  |
| POST   | `/login`           | Authenticate user     |
| POST   | `/refresh`         | Refresh access token |

## 4. Categories API
### Base URL: `http://localhost:3001/categories`
| Method | Endpoint  | Description           |
|--------|----------|-----------------------|
| POST   | `/create`| Create a new category |
| PUT    | `/update`| Update a category     |
| GET    | `/get`   | Retrieve categories   |
| DELETE | `/delete`| Delete a category     |

## 5. Bookmarks API
### Base URL: `http://localhost:3001/bookmarks`
| Method | Endpoint  | Description          |
|--------|----------|----------------------|
| POST   | `/bookmarks`| Create a bookmark  |
| PUT    | `/update`   | Update a bookmark  |
| GET    | `/get`      | Retrieve bookmarks |
| DELETE | `/delete`   | Delete a bookmark  |

## 6. Database Schema (Prisma)
The database is managed using Prisma ORM. The main entities include `User`, `Category`, and `Bookmark`.

```prisma
model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  categories Category[]
  bookmarks  Bookmark[]
}

model Category {
  id        String   @id @default(uuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  bookmarks Bookmark[]
}

model Bookmark {
  id        String   @id @default(uuid())
  title     String
  url       String
  category  Category @relation(fields: [categoryId], references: [id])
  categoryId String
}
```

### 7. Develop

```

To develop all apps and packages, start the database and localstack:

```
docker-compose up -d
```
after that for the first time you need to migrate database. open new terminal and do

```
cd bookmarkapp && npx prisma migrate deploy
```

---
This RFC document provides an overview of the BookmarkApp's API structure, architecture, and deployment guidelines. Feedback and suggestions for improvements are welcome!

